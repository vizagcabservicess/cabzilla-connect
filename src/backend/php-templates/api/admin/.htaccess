
# Enable rewrite engine
RewriteEngine On
RewriteBase /api/admin/

# CRITICAL: Prevent any api/api confusion in admin directory
RewriteCond %{THE_REQUEST} /api/api/admin [OR]
RewriteCond %{REQUEST_URI} ^/api/api/admin
RewriteRule ^(.*)$ /$1 [R=301,L]

# Set PHP handler (critical)
AddHandler application/x-httpd-php .php

# Enable CORS with comprehensive headers
Header always set Access-Control-Allow-Origin "*"
Header always set Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
Header always set Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, X-Force-Refresh, X-Admin-Mode, X-Database-First, X-Debug"
Header always set Access-Control-Max-Age "86400"
Header always set Access-Control-Expose-Headers "*"
Header always set X-Content-Type-Options "nosniff"

# Handle OPTIONS preflight requests - CRITICAL: Must be VERY first rule
RewriteCond %{REQUEST_METHOD} OPTIONS
RewriteRule ^(.*)$ $1 [R=200,L]

# Critical PHP settings - must be set early
<FilesMatch "\.php$">
    # Ensure PHP files are recognized and processed correctly
    SetHandler application/x-httpd-php
    # Set JSON content type for API responses
    Header always set Content-Type "application/json"
    # No caching for PHP files
    Header set Cache-Control "no-cache, no-store, must-revalidate"
    Header set Pragma "no-cache"
    Header set Expires "0"
    # CRITICAL: Allow all access to PHP files
    Require all granted
</FilesMatch>

# Add direct access to the diagnostic tools
RewriteRule ^check-routing$ ../check-api-routing.php [L,QSA]
RewriteRule ^test-api-routing$ ../check-api-routing.php [L,QSA]
RewriteRule ^fix-cors$ fix-cors.php [L,QSA]

# Test endpoint for API connectivity verification
RewriteRule ^test-booking-api$ test-booking-api.php [L,QSA]

# CRITICAL: Explicitly define booking endpoints with highest priority
RewriteRule ^booking$ booking.php [L,QSA]
RewriteRule ^booking/([0-9]+)$ booking.php?id=$1 [L,QSA]
RewriteRule ^bookings$ booking.php [L,QSA]
RewriteRule ^bookings/([0-9]+)$ booking.php?id=$1 [L,QSA]

# Critical: Don't apply rewriting to actual PHP files
RewriteCond %{REQUEST_FILENAME} -f
RewriteRule ^(.+)\.php$ $1.php [L,QSA]

# Admin users endpoint for user management
RewriteRule ^users$ users.php [L,QSA]
RewriteRule ^users/([0-9]+)$ users.php?id=$1 [L,QSA]

# CRITICAL ENDPOINT MAPPINGS - Direct mappings for vehicle operations
# Make sure these are at the top, before any other rules
RewriteRule ^vehicles/create$ direct-vehicle-create.php [L,QSA]
RewriteRule ^direct-vehicle-create$ direct-vehicle-create.php [L,QSA]
RewriteRule ^add-vehicle$ add-vehicle-simple.php [L,QSA]
RewriteRule ^vehicle-create$ direct-vehicle-create.php [L,QSA] 
RewriteRule ^add-vehicle-simple$ add-vehicle-simple.php [L,QSA]

# Vehicle update endpoints
RewriteRule ^vehicle-update$ direct-vehicle-modify.php [L,QSA]
RewriteRule ^update-vehicle$ direct-vehicle-modify.php [L,QSA]
RewriteRule ^vehicles-update$ direct-vehicle-modify.php [L,QSA]
RewriteRule ^direct-vehicle-update$ direct-vehicle-modify.php [L,QSA]

# Reload endpoints (make these accessible via multiple paths)
RewriteRule ^vehicles/reload$ reload-vehicles.php [L,QSA]
RewriteRule ^reload$ reload-vehicles.php [L,QSA]
RewriteRule ^refresh$ reload-vehicles.php [L,QSA]
RewriteRule ^refresh-vehicles$ reload-vehicles.php [L,QSA]

# Permissions for this directory
<Directory "/api/admin">
    Options Indexes FollowSymLinks
    AllowOverride All
    Require all granted
</Directory>
