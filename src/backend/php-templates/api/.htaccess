
# Enable URL rewriting with aggressive CORS configuration
RewriteEngine On
RewriteBase /api/

# CRITICAL: Force PHP processing for all .php files - MUST BE FIRST!
<FilesMatch "\.php$">
    # Ensure PHP files are processed correctly
    SetHandler application/x-httpd-php
    # No caching for PHP files
    Header set Cache-Control "no-cache, no-store, must-revalidate"
    Header set Pragma "no-cache"
    Header set Expires "0"
    # Set content type for API responses
    Header set Content-Type "application/json" env=!no_content_type
</FilesMatch>

# CRITICAL FIXED: Special handling for download-invoice.php - explicitly clear Content-Type
<Files "download-invoice.php">
    # Remove all output buffering before processing
    php_flag output_buffering off
    # Remove Content-Type header to let PHP script set it
    Header unset Content-Type
    # FIXED: Add environment variable to identify special handling
    SetEnvIf Request_URI "download-invoice\.php" no_content_type=1
    Header unset Content-Type env=no_content_type
    # Ensure PHP processing
    SetHandler application/x-httpd-php
    # Force allow all CORS headers
    Header always set Access-Control-Allow-Origin "*"
    Header always set Access-Control-Allow-Methods "GET, POST, OPTIONS"
    Header always set Access-Control-Allow-Headers "*"
    # Ensure no caching for PDF files
    Header always set Cache-Control "no-store, no-cache, must-revalidate, max-age=0"
    Header always set Pragma "no-cache"
    Header always set Expires "0"
    # FIXED: Remove any conflicting handlers
    RemoveHandler .php
    RemoveType application/x-httpd-php
</Files>

# CRITICAL FIXED: Same special handling for admin version
<Files "admin/download-invoice.php">
    # Remove all output buffering before processing
    php_flag output_buffering off
    # Remove Content-Type header to let PHP script set it
    Header unset Content-Type
    # FIXED: Add environment variable to identify special handling
    SetEnvIf Request_URI "admin/download-invoice\.php" no_content_type=1
    Header unset Content-Type env=no_content_type
    # Ensure PHP processing
    SetHandler application/x-httpd-php
    # Force allow all CORS headers
    Header always set Access-Control-Allow-Origin "*"
    Header always set Access-Control-Allow-Methods "GET, POST, OPTIONS"
    Header always set Access-Control-Allow-Headers "*"
    # Ensure no caching for PDF files
    Header always set Cache-Control "no-store, no-cache, must-revalidate, max-age=0"
    Header always set Pragma "no-cache"
    Header always set Expires "0"
    # FIXED: Remove any conflicting handlers
    RemoveHandler .php
    RemoveType application/x-httpd-php
</Files>

# Special handling for test-pdf.php
<Files "test-pdf.php">
    # Remove Content-Type header to let PHP script set it
    Header unset Content-Type
    SetHandler application/x-httpd-php
    # Force allow all CORS headers
    Header always set Access-Control-Allow-Origin "*"
    Header always set Access-Control-Allow-Methods "GET, POST, OPTIONS"
    Header always set Access-Control-Allow-Headers "*"
    # Ensure no caching
    Header always set Cache-Control "no-store, no-cache, must-revalidate, max-age=0"
    Header always set Pragma "no-cache"
    Header always set Expires "0"
</Files>

# PDF MimeType handling - don't force Content-Type
<FilesMatch "\.pdf$">
    ForceType application/pdf
    Header always set X-Content-Type-Options "nosniff"
</FilesMatch>

# CRITICAL: Respond with 200 OK for OPTIONS preflight requests (highest priority)
RewriteCond %{REQUEST_METHOD} OPTIONS
RewriteRule .* - [R=200,L]

# Set access headers for all responses
<IfModule mod_headers.c>
    # Set CORS headers unconditionally for all responses
    Header always set Access-Control-Allow-Origin "*"
    Header always set Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
    Header always set Access-Control-Allow-Headers "*"
    Header always set Access-Control-Max-Age "86400"
    Header always set Access-Control-Expose-Headers "*"
    Header always set X-Content-Type-Options "nosniff"
</IfModule>

# Add public download-invoice endpoint with special handling for PDFs
RewriteRule ^download-invoice\.php$ /api/download-invoice.php [L,NC,QSA]
RewriteRule ^download-invoice$ /api/download-invoice.php [L,NC,QSA]

# Direct access to all PHP files - CRITICAL NEW RULE
<Files ~ "\.php$">
    Order Allow,Deny
    Allow from all
    SetHandler application/x-httpd-php
</Files>

# Special handling for admin API endpoints
RewriteRule ^admin/update-booking\.php$ /api/admin/update-booking.php [L,NC,QSA]
RewriteRule ^admin/update-booking$ /api/admin/update-booking.php [L,NC,QSA]
RewriteRule ^admin/booking\.php$ /api/admin/booking.php [L,NC,QSA]
RewriteRule ^admin/booking$ /api/admin/booking.php [L,NC,QSA]

# Force MIME types
AddType application/pdf .pdf
AddType application/x-httpd-php .php

# Invoice and receipt endpoints with high priority
RewriteRule ^invoice/([0-9]+)/?$ /api/admin/generate-invoice.php?id=$1 [L,NC,QSA]
RewriteRule ^receipt/([0-9]+)/?$ /api/admin/receipt.php?id=$1 [L,NC,QSA]

# Diagnostic endpoints with high priority  
RewriteRule ^test$ /api/test.php [L,NC,QSA]
RewriteRule ^test-pdf$ /api/test-pdf.php [L,NC,QSA]
RewriteRule ^test-paths$ /api/test-paths.php [L,NC,QSA]

# Don't apply rewriting to actual files or directories
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d

# Send all other requests to index.html for React to handle
RewriteRule ^(.*)$ /index.html [L]
