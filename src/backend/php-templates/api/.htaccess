
# API .htaccess - Handle API requests with aggressive CORS
RewriteEngine On
RewriteBase /api/

# CRITICAL: Force PHP processing for all .php files
<FilesMatch "\.php$">
    # Ensure PHP files are processed correctly
    SetHandler application/x-httpd-php
    # Set JSON content type for API responses
    Header always set Content-Type "application/json"
    # No caching for API responses
    Header set Cache-Control "no-cache, no-store, must-revalidate"
    Header set Pragma "no-cache"
    Header set Expires "0"
</FilesMatch>

# CRITICAL: Debug headers for API responses
Header always set X-API-Debug "API request handled through /api/.htaccess"

# CRITICAL: Respond with 200 OK for OPTIONS preflight requests
RewriteCond %{REQUEST_METHOD} OPTIONS
RewriteRule .* - [R=200,L]

# Set CORS headers - extremely permissive for debugging
<IfModule mod_headers.c>
    # Set CORS headers unconditionally for all responses
    Header always set Access-Control-Allow-Origin "*"
    Header always set Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
    Header always set Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, X-Force-Refresh, X-Admin-Mode, X-Database-First, X-Debug, *"
    Header always set Access-Control-Max-Age "86400"
    Header always set Access-Control-Expose-Headers "*"
    Header always set X-Content-Type-Options "nosniff"
</IfModule>

# Direct API routes to their PHP handlers
RewriteCond %{REQUEST_FILENAME}.php -f
RewriteRule ^(.*)$ $1.php [L]

# Admin API subdirectory handling
RewriteRule ^admin$ admin/index.php [L]
RewriteRule ^admin/$ admin/index.php [L]
RewriteRule ^admin/(.*)$ admin/$1 [L]

# Add a catch-all to prevent 404 errors
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.*)$ index.php [L,QSA]
